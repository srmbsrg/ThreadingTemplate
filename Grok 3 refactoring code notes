and security.ConclusionThe refactored code improves performance, maintainability, and testability while adhering to modern C# practices. The use of async/await, dependency injection, and structured error handling makes the code more robust and easier to extend. Apply these patterns to the remaining methods (e.g., ExportSubSetOfFilesAsync, Translate* methods) for a complete refactor. If you need specific sections refactored further or additional guidance, let me know!